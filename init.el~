;; my emacs settings
;; settings for MELPA
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`
;; and `package-pinned-packages`. Most users will not need or want to do this.
;;(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(package-initialize)


;;set the Melpa sources
(when (>= emacs-major-version 24)
     (require 'package)
     (package-initialize)
     (setq package-archives '(("gnu"   . "http://elpa.emacs-china.org/gnu/")
		      ("melpa_china" . "http://elpa.emacs-china.org/melpa/"))))

;; cl - Common Lisp Extension
(require 'cl)

 ;; Add Packages to my/packages (the packages you want)
(defvar my/packages '(
		;; --- Auto-completion ---
		company
		;; --- Better Editor -
		hungry-delete
		smex
		swiper
		counsel
		smartparens
		;; --- Major Mode ---
		js2-mode
		;; --- Minor Mode ---
		nodejs-repl
		exec-path-from-shell
		;; --- Themes ---
		dracula-theme
		;; solarized-theme
		) "my default packages")
;;Store here packages installed explicitly by user.
(setq package-selected-packages my/packages)
;; install packages in the var: my/packages
(defun my/packages-installed-p ()
  ;; loop for is from (require 'cl)
     (loop for pkg in my/packages
	   when (not (package-installed-p pkg)) do (return nil)
	   finally (return t)))

 (unless (my/packages-installed-p)
     (message "%s" "Refreshing package database...")
     (package-refresh-contents)
     (dolist (pkg my/packages)
       (when (not (package-installed-p pkg))
	 (package-install pkg))))

 ;; Find Executable Path on OS X
 (when (memq window-system '(mac ns))
   (exec-path-from-shell-initialize))

;; bind the ~/.emacs.d/init.el to F1 keys
(defun open-init-file()
  (interactive)
  (find-file "~/.emacs.d/init.el"))
(global-set-key (kbd "<f2>") 'open-init-file)

;; set full screen when initialize. initial-frame-alist is a variable defined in ‘frame.el’.
;;Its value is ((fullscreen . maximized)).Original value was nil
(setq initial-frame-alist (quote ((fullscreen . maximized))))

;;highlight matching parenthesis
(add-hook 'emacs-lisp-mode-hook 'show-paren-mode)

;;highlights current line
(global-hl-line-mode 1)

;; add a theme to my/packages-it will install
(add-to-list 'my/packages 'monokai-theme)

;;load theme when you open emacs
(load-theme 'monokai 1)
(load-theme 'dracula 1)

;;config for the smartparens 
(require 'smartparens-config);;enable default config
(add-hook 'emacs-lisp-mode-hook 'smartparens-mode)

;;You can now use smartparens with M-x smartparens-mode.
;;To automatically enable smartparens in a programming mode:
;; Always start smartparens mode in js-mode.
(add-hook 'js-mode-hook #'smartparens-mode)
(add-hook 'text-mode 'smartparens-mode)


(linum-mode t);; line number
(global-linum-mode t);; line number mode
(tool-bar-mode -1);;disable tool bar on top
(set-face-attribute 'default nil :height 130) ;; set font size for emacs
(setq inhibit-splash-screen t) ;; disable the help landing page
(global-company-mode 1) ;;enable COMPlete ANY thing mode
;; some variables are 'buffer-local", each buffer is allowed to have a separate value for that variable that override teh global default.
;; For buffer-local variable, setq sets its local value in current buffer
;; setq-default sets the global default value
;; if a variable is not buffer-local, setq=setq-default
(setq-default cursor-type 'bar) 
(recentf-mode 1)

;; enable recent files in the buffers
(require 'recentf)
(recentf-mode 1)
(setq recent-max-menu-file-item 15) ;;set number of items in recent files.
(global-set-key "\C-x\ \C-r" 'recentf-open-files)

(delete-selection-mode 1);;when selected, insertion will replate the original text

;;如果不想每次都在 org 文件头指定，可以在 Emacs 配置文件中进行如下设定：#+LATEX_CMD: xelatex
(setq org-latex-pdf-process '("xelatex -interaction nonstopmode %f"
                              "xelatex -interaction nonstopmode %f"))

(let ((my-path (expand-file-name "/usr/local/bin:/usr/local/texlive/2020/bin/x86_64-darwin")))
    (setenv "PATH" (concat my-path ":" (getenv "PATH")))
    (add-to-list 'exec-path my-path)) 


;; for hungry delte
(require 'hungry-delete)
(global-hungry-delete-mode)

;;config for swiper
(ivy-mode 1)
(setq ivy-use-virtual-buffers t)
(setq enable-recursive-minibuffers t)
;; enable this if you want `swiper' to use it
;; (setq search-default-mode #'char-fold-to-regexp)
(global-set-key "\C-s" 'swiper)
(global-set-key (kbd "C-c C-r") 'ivy-resume)
(global-set-key (kbd "<f6>") 'ivy-resume)
(global-set-key (kbd "M-x") 'counsel-M-x)
(global-set-key (kbd "C-x C-f") 'counsel-find-file)
(global-set-key (kbd "<f1> f") 'counsel-describe-function)
(global-set-key (kbd "<f1> v") 'counsel-describe-variable)


;; AucTeX
(setq TeX-auto-save t)
(setq TeX-parse-self t)
(setq-default TeX-master nil)
(add-hook 'LaTeX-mode-hook 'visual-line-mode)
(add-hook 'LaTeX-mode-hook 'flyspell-mode)
(add-hook 'LaTeX-mode-hook 'LaTeX-math-mode)
(add-hook 'LaTeX-mode-hook 'turn-on-reftex)
(setq reftex-plug-into-AUCTeX t)
(setq TeX-PDF-mode t)

;; Use Skim as viewer, enable source <-> PDF sync
;; make latexmk available via C-c C-c
;; Note: SyncTeX is setup via ~/.latexmkrc (see below)
(add-hook 'LaTeX-mode-hook (lambda ()
  (push
    '("latexmk" "latexmk -pdf %s" TeX-run-TeX nil t
      :help "Run latexmk on file")
    TeX-command-list)))
(add-hook 'TeX-mode-hook '(lambda () (setq TeX-command-default "latexmk")))

;; use Skim as default pdf viewer
;; Skim's displayline is used for forward search (from .tex to .pdf)
;; option -b highlights the current line; option -g opens Skim in the background  
(setq TeX-view-program-selection '((output-pdf "PDF Viewer")))
(setq TeX-view-program-list
      '(("PDF Viewer" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g %n %o %b")))
;;;;;; end of setup for auctex and skim



;; config for smex
;;To auto-start Smex every time you open Emacs add these lines to your .emacs file:
(require 'smex) ;; Not needed if you use package.el
(smex-initialize) ;; Can be omitted. This might cause a (minimal) delay
;; when Smex is auto-initialized on its first run.Bind some keys:
(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
;; This is your old M-x.
(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)
;;add to path
(setenv "PATH"
	(concat (getenv "PATH") ":/Library/TeX/texbin:/usr/local/bin"))


;;set for cdlatex
(add-to-list 'load-path "/Applications/Emacs.app/Contents/Resources/site-lisp")
(require 'cdlatex)
(add-hook 'LaTeX-mode-hook 'turn-on-cdlatex)   ; with AUCTeX LaTeX mode
(add-hook 'latex-mode-hook 'turn-on-cdlatex)   ; with Emacs latex mode
(add-hook 'LaTex-mode-hook 'turn-on-reftex)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#272822" "#F92672" "#A6E22E" "#E6DB74" "#66D9EF" "#FD5FF0" "#A1EFE4" "#F8F8F2"])
 '(company-idle-delay 0.05)
 '(company-minimum-prefix-length 1)
 '(compilation-message-face (quote default))
 '(custom-safe-themes
   (quote
    ("8b58ef2d23b6d164988a607ee153fd2fa35ee33efc394281b1028c2797ddeebb" "2dff5f0b44a9e6c8644b2159414af72261e38686072e063aa66ee98a2faecf0e" default)))
 '(fci-rule-color "#3C3D37")
 '(highlight-changes-colors (quote ("#FD5FF0" "#AE81FF")))
 '(highlight-tail-colors
   (quote
    (("#3C3D37" . 0)
     ("#679A01" . 20)
     ("#4BBEAE" . 30)
     ("#1DB4D0" . 50)
     ("#9A8F21" . 60)
     ("#A75B00" . 70)
     ("#F309DF" . 85)
     ("#3C3D37" . 100))))
 '(magit-diff-use-overlays nil)
 '(org-agenda-files
   (quote
    ("~/Documents/projects/learn_from_noisy_label/main.tex")))
 '(package-selected-packages
   (quote
    (dracula-theme auctex-latexmk auctex smex company hungry-delete swiper counsel smartparens js2-mode nodejs-repl exec-path-from-shell monokai-theme)))
 '(pos-tip-background-color "#FFFACE")
 '(pos-tip-foreground-color "#272822")
 '(vc-annotate-background nil)
 '(vc-annotate-color-map
   (quote
    ((20 . "#F92672")
     (40 . "#CF4F1F")
     (60 . "#C26C0F")
     (80 . "#E6DB74")
     (100 . "#AB8C00")
     (120 . "#A18F00")
     (140 . "#989200")
     (160 . "#8E9500")
     (180 . "#A6E22E")
     (200 . "#729A1E")
     (220 . "#609C3C")
     (240 . "#4E9D5B")
     (260 . "#3C9F79")
     (280 . "#A1EFE4")
     (300 . "#299BA6")
     (320 . "#2896B5")
     (340 . "#2790C3")
     (360 . "#66D9EF"))))
 '(vc-annotate-very-old-color nil)
 '(weechat-color-list
   (quote
    (unspecified "#272822" "#3C3D37" "#F70057" "#F92672" "#86C30D" "#A6E22E" "#BEB244" "#E6DB74" "#40CAE4" "#66D9EF" "#FB35EA" "#FD5FF0" "#74DBCD" "#A1EFE4" "#F8F8F2" "#F8F8F0"))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )

;;在用brew安装完AUCTEX，最后会友好的提示
(add-to-list 'load-path "/usr/local/share/emacs/site-lisp")
(require 'tex-site)


;; maxmize windows
;; Start maximised (cross-platf)
(add-hook 'window-setup-hook 'toggle-frame-maximized t)
;; Start fullscreen (cross-platf)
(add-hook 'window-setup-hook 'toggle-frame-fullscreen t)


;;set JS IDE
(setq auto-mode-alist ;; auto-mode-alist is used to associate major mode with different types of file matching by regular expression
      (append
       '(("\\.js\\'" . js2-mode));; use js2-mode to replate the default major mode
       auto-mode-alist))
;; for js requiring nodejs and outpu error messages on Macq
(when (memq window-system '(mac ns))
  (exec-path-from-shell-initialize))


;;highligh for org mode
(require 'org)
(setq org-src-fontify-natively t)


;; uncertain setup for auctex
(load "auctex.el" nil t t)
(load "preview-latex.el" nil t t)
(setq TeX-auto-save t)
(setq TeX-parse-self t)
(setq-default TeX-master nil)
(setq TeX-output-view-style (quote (("^pdf$" "." "evince %o %(outpage)"))))

(add-hook 'LaTeX-mode-hook
(lambda()
(add-to-list 'TeX-command-list '("XeLaTeX" "%`xelatex%(mode)%' %t" TeX-run-TeX nil t))
(setq TeX-command-default "XeLaTeX")))

